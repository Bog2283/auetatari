import telebot
import random
import time

TOKEN = '6926012853:AAFUvjf9Yj4plSW36JdjceBUvnEaL_IQROw'
bot = telebot.TeleBot(TOKEN)


questions1 = {

    'приветствие' : '인사',
    'приветствовать' : '인사하다',
    'Давайте поздороваемся' : '인사합시다',
    'Здравствуйте' : '안녕하십니까 (안녕하세요)',
    'Привет': '안녕',
    'До свидания (уходящему)' : '안녕히 가십시오 (안녕히 가세요)',
    'До свидания (остающемуся)' : '안녕히 계십시오 (안녕히 계세요)',
    'Пока'  : '잘 가',
    'Пока' : '잘 있어',
    'Здравствуйте (тому, кто усердно трудится)': '수고하십니다',
    'До свидания (тому, кто усердно трудился)' : '수고했습니다',
    'Здравствуйте (при первой встрече)' : '처음 뵙겠습니다',
    'Это': '이것', 
    'Дедушка' :'할아버지' ,
    'Сильно, очень' : '아주' ,
    'Сильно, реально' : '매우'  ,
    'Любить' : '좋아하다' ,
    'Падать в цене' : '싸지다'    ,
    '(Красивый)' : '예쁩',
    'Ручка' : '펜'  ,
    'Год' : '년',
    'Ранее' : '전에' ,
    'Старший брат' : '오빠',
    'Жизнь' : '생'  ,
    'Сейчас' : '지금' ,
    'Офис' : '회사' ,
    'Работа, задание' : '일',
    'Работа, задание' : '많이' ,
    'Работа, задание' : '드리다',
    'В' : '안에',
    'Ago' : '전에',
    'Покупать' : '사다' ,
    '20' : '스물',
    '4' : '넷' ,
    'Работать' : '일하다' ,
    'Счетное слово для лет человека' : '살',
    'Handsome' : '잘생기다' ,
    'Помогать' : '도와드리다',
    'Профессия' : '직업' ,
    'Упражнение' : '연습' ,
    'Смотреть' : '보다' ,
    'Домохозяйка' : '주부'    ,
    'Что' : '무엇' ,
    'Пакистан' : '파키스탄' ,
    'Индия' : '인도' ,
    'Этнический кореец рожденный в России' : '고려',
    'Этнический кореец рожденный в Корее' : '교포' ,
    'Визитка' : '명함' ,
    'Номер телефона' : '전화번호' ,
    'Правило' : '규침' ,
    'Встречаться, видеться' : '만나다' ,
    'Разговор' : '이야기' ,
    'Приезжать' : '오다' , 
    'Часто' : '자주' ,
    'Иметь, находиться' : '있다' ,
    'Чтение' : '읽기' ,
    'Мужчина' : '남자',
    'Это' : '이' ,
    'Тот' : '그' ,
    'Тот' : '저',

}

questions = {
    'Расскажи про веламен': "мертвая, 1, покровная",
    'Расскажи про либриформ': "мертвая, 2, склеренхима",
    'Расскажи про полисадный мезофилл(хлоренхима)': "живая, основная",
    'Расскажи про эпиблему': "1, покровная",
    'Расскажи про водоносную паранхиму': "живая, 1, основная",
    'Расскажи про волокнистую трахеиду': "мертвая, 1, ксилема",
    'Расскажи про клетки-спутницы': "живая, 1/2, флоэма",
    'Расскажи про колленхиму': "живая, 1, колленхима",
    'Расскажи про корневой волосок': "живая, 1, покровная",
    'Расскажи про перецикл': "живая, 1, меристема",
    'Расскажи про протодерму': "живая, 1, меристема",
    'Расскажи про протоксилему': "мертвая, 1, ксилема",
    'Расскажи про сердцевина': "живая, 1, основная",
    'Расскажи про складчатый мезофилл': "живая, 1, основная",
    'Расскажи про сосуды': "мертвая, 1/2, ксилема",
    'Расскажи про трихомы': "живая, 1, покровная",
    'Расскажи про устьице': "живая, 1, покровная",
    'Расскажи про феллема(пробка)': "мертвая, 2, основная",
    'Расскажи про чечевичка': "мертвая, 2, покровная",
    'Расскажи про аэренхима': "живая, 2, основная",
    'Расскажи про губчатый мезофилл': "живая, 1, основная",
    'Расскажи про интеркалярная образовательная ткань': "живая, 1, меристема",
    'Расскажи про камбий': "живая, 2, меристема",
    'Расскажи про каменистая клетка': "мертвая, 1",
    'Расскажи про корка': "мертвая, 3, покровная",
    'Расскажи про простой кроющий волосок': "мертвая, 2, покровная",
    'Расскажи про ситовидные трубки': "живая, 1, флоэма",
    'Расскажи про трахеи': "мертвая, 1, ксилема",
    'Расскажи про феллоген': "живая, 2, меристема",
}


@bot.message_handler(commands=['bot'])

def send_question(message):
    question = random.choice(list(questions.keys()))
    bot.send_message(message.chat.id, question)
    bot.register_next_step_handler(message, check_answer, question)


def check_answer(message, question):
    if message.text.lower() != questions[question].lower():
        bot.send_message(message.chat.id, "Неправильно.")
    else:
        bot.send_message(message.chat.id, "Умничка!")
    time.sleep(0.6)
    send_question(message)

    return



@bot.message_handler(commands=['kor'])

def send_question1(message1):
    question1 = random.choice(list(questions1.keys()))
    bot.send_message(message1.chat.id, question1)
    bot.register_next_step_handler(message1, check_answer1, question1)


def check_answer1(message1, question1):
    if message1.text.lower() != questions1[question1].lower():
        bot.send_message(message1.chat.id, "Неправильно. Будет лучше:" + questions1[question1] )
    else:
        bot.send_message(message1.chat.id, "Умничка!")
    time.sleep(0.6)
    send_question1(message1)

    return


@bot.message.handler(commands=[stop])




bot.polling(non_stop=True)
